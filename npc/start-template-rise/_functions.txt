function	script	InputOutOfRange	{ return getarg(0,0) <= 0 || getarg(0,0) > getarg(1,0); }

function	script	IsWeekend	{ .@day = gettime(DT_DAYOFWEEK); return (((.@day == FRIDAY) && gettime(DT_HOUR) >= 18) || (.@day == SATURDAY) || (.@day == SUNDAY)); }

function	script	IsInventoryFull	{ return (!checkweight(1100,1)); }

function	script	ApplyTired	{
	atcommand "@fakename";
	if(tired)
	.@debuffHint$ = "ล้า " + tired + "%";
	if(bonusDebuff)
	.@debuffHint$ += ((.@debuffHint$ != "") ? " " : "") + "ของเสื่อม " + bonusDebuff + "%";
	if(.@debuffHint$ != "")
	atcommand "@fakename [" + .@debuffHint$ + "]" + strcharinfo(0);
	atcommand "@debuff " + tired + " " + bonusDebuff;
	return;
}

function	script	ResetTired	{
	tired = 0;
	tiredSpot = 0;
	ptt = 0;
	callfunc("ApplyTired");
	return;
}

function	script	IsSkipTickMap	{
	.@value$ = getarg(0,strcharinfo(3));
	return ((.@value$ == "bl_depth2") || (.@value$ == "pvp_n_1-1") || (.@value$ == "pvp_n_1-3") || (.@value$ == "pvp_n_1-5"));
}

function	script	StringBase10000	{
	.@value = getarg(0,0);
	if(.@value < 10)
	return ("0.0" + .@value);
	else if(.@value < 100)
	return ("0." + (.@value / 10));
	else if(.@value < 1000)
	return insertchar((.@value / 10),".",1);
	else
	return (.@value /= 100);
}

function	script	KM	{
	.@value = getarg(0,0);
	if(.@value < 1000)
	return .@value;
	else if(.@value < 1000000)
	return (.@value /= 1000) + "k";
	else if(.@value >= 1000000)
	return (.@value /= 1000000) + "m";
}

function	script	Cap	{ return cap_value(getarg(0,0) + getarg(1,0),0,INT_MAX); }

function	script	IsZenyExceed	{
	.@isZenyExceed = (Cap(Zeny,getarg(0,0)) > 2000000000);
	if(.@isZenyExceed)
	message strcharinfo(0),"เกิดข้อผิดพลาด: Zeny เต็มแล้ว";
	return .@isZenyExceed;
}

function	script	ChangeZeny	{
	.@value = getarg(0,0);
	.@isEffect = getarg(1,1);
	.@isIncrease = (.@value >= 0);
	Zeny = Cap(Zeny,.@value);
	message strcharinfo(0),(.@isIncrease ? "+" : "-") + F_InsertComma(.@value) + "z เป็น " + F_InsertComma(Zeny) + "z";
	if(.@isEffect)
	specialeffect2 18;
	return;
}

function	script	Storage	{
	.@menu$ = "คลังเก็บของปกติ:คลังเก็บของ Guild:";
	.@selectedStorage = select(.@menu$);
	if(.@selectedStorage == 1)
	openstorage;
	else if(.@selectedStorage == 2)
	guildopenstorage();
	return;
}

function	script	CCCDrop	{
	.@tier = getarg(0,0);
	.@isBoss = getarg(1,0);
	// Error
	if(.@tier <= 0)
	return;

	.@isHappyFloor = (lastPlayMap == $happyFloor[0]) || (lastPlayMap == $happyFloor[1]) || (lastPlayMap == $happyFloor[2]);

	// Body Points (Base 10%)
	.@rand = rand(100);
	.@rate = (10 * bonusDropMultiplier);
	if((.@rand < .@rate) || .@isBoss){
		.@reward = (.@isBoss ? bonusBossDropMultiplier : 1);
		if(.@isHappyFloor)
		.@reward *= 2;
		bodyPoints[.@tier] = cap_value(bodyPoints[.@tier] + .@reward,0,INT_MAX);
		dispbottom "+" + .@reward + " แต้ม Body Tier " + .@tier + " (รวม " + F_InsertComma(bodyPoints[.@tier]) + ")",0xfafa80;
	}
	else if(!#isSkipVerboseLog)
	dispbottom "(แต้ม Body) ต้องสุ่มได้ < " + .@rate + " คุณสุ่มได้ " + .@rand,0xfa8080;
	// Trait Points (Base 5%)
	.@rand = rand(100);
	.@rate = (5 * bonusDropMultiplier);
	if((.@rand < .@rate) || .@isBoss){
		.@reward = (.@isBoss ? bonusBossDropMultiplier : 1);
		if(.@isHappyFloor)
		.@reward *= 2;
		traitPoints[.@tier] = cap_value(traitPoints[.@tier] + .@reward,0,INT_MAX);
		dispbottom "+" + .@reward + " แต้ม Trait Tier " + .@tier + " (รวม " + F_InsertComma(traitPoints[.@tier]) + ")",0xfafa80;
	}
	else if(!#isSkipVerboseLog)
	dispbottom "(แต้ม Trait) ต้องสุ่มได้ < " + .@rate + " คุณสุ่มได้ " + .@rand,0xfa8080;
	// Skill Points (Base 3%)
	.@rand = rand(100);
	.@rate = (3 * bonusDropMultiplier);
	if((.@rand < .@rate) || .@isBoss){
		.@reward = (.@isBoss ? bonusBossDropMultiplier : 1);
		if(.@isHappyFloor)
		.@reward *= 2;
		skillPoints[.@tier] = cap_value(skillPoints[.@tier] + .@reward,0,INT_MAX);
		dispbottom "+" + .@reward + " แต้ม Skill Tier " + .@tier + " (รวม " + F_InsertComma(skillPoints[.@tier]) + ")",0xfafa80;
	}
	else if(!#isSkipVerboseLog)
	dispbottom "(แต้ม Skill) ต้องสุ่มได้ < " + .@rate + " คุณสุ่มได้ " + .@rand,0xfa8080;
	// Effect Points (Base 1%)
	.@rand = rand(100);
	.@rate = (1 * bonusDropMultiplier);
	if((.@rand < .@rate) || .@isBoss){
		.@reward = (.@isBoss ? bonusBossDropMultiplier : 1);
		if(.@isHappyFloor)
		.@reward *= 2;
		effectPoints[.@tier] = cap_value(effectPoints[.@tier] + .@reward,0,INT_MAX);
		dispbottom "+" + .@reward + " แต้ม Effect Tier " + .@tier + " (รวม " + F_InsertComma(effectPoints[.@tier]) + ")",0xfafa80;
	}
	else if(!#isSkipVerboseLog)
	dispbottom "(แต้ม Effect) ต้องสุ่มได้ < " + .@rate + " คุณสุ่มได้ " + .@rand,0xfa8080;
	return;
}

function	script	ReturnOrb	{
	specialeffect2 35;
	if(!IsSkipTickMap())
	progressbar "",2;
	callfunc("MapCleanUp");
	warp "Save",0,0;
	setpcblock PCBLOCK_ALL,false;
	callfunc("ApplyCCCRules");
	return;
}

function	script	TeleportOrb	{
	specialeffect2 780;
	if(!IsSkipTickMap())
	progressbar "",1;
	if(!IsSkipTickMap() && $isBossMaps[lastPlayMap]){
		getunitdata $gidBossMaps[lastPlayMap],.@uds;
		menu "Teleport ปกติ",MenuTeleportNormal,"ลงหัว Boss",-;
		// Get available cell to warp to boss
		getfreecell strcharinfo(3),.@rX,.@rY,.@uds[UMOB_X],.@uds[UMOB_Y],rand(5),rand(5);
		warp strcharinfo(3),.@rX,.@rY;
		viewpoint 1,.@uds[UMOB_X],.@uds[UMOB_Y],1,0xff0000;
	}
	else{
MenuTeleportNormal:
		warp "Random",0,0;
		viewpoint 1,.@uds[UMOB_X],.@uds[UMOB_Y],1,0xff0000;
	}
	
	return;
}

function	script	ApplyCCCRules	{
	// Player can't attack
	setpcblock PCBLOCK_ATTACK,true;
	
	// Not allowed to had normal game points
	StatusPoint = 0;
	TraitPoint = 0;
	SkillPoint = 0;
	
	if(JobLevel < 100)
	JobLevel = 100;
	
	return;
}

function	script	RemovePlayDelegates	{
	deltimer "เล่นเกม::OnSpawnMonsterHint";
	deltimer "เล่นเกม::OnSpawnMonster";
	
	return;
}

function	script	ApplyEffect	{
	bonus_script_clear 8;
	.@regenRate = effectLvs[14];
	.@maxHpLv = effectLvs[9]);
	.@baseMaxHp =
	(.@maxHpLv < 10) ? 1000
	: (.@maxHpLv < 20) ? 2500
	: (.@maxHpLv < 30) ? 4000
	: (.@maxHpLv < 40) ? 5500
	: (.@maxHpLv < 50) ? 7500
	: (.@maxHpLv < 60) ? 9500
	: (.@maxHpLv < 70) ? 11500
	: (.@maxHpLv < 80) ? 14000
	: (.@maxHpLv < 90) ? 16500
	: 20000;
	bonus_script
	"bonus2 bAddClass,CLASS_ALL," + (100 * effectLvs[0]) + ";"
	+ "bonus2 bMagicAddClass,CLASS_ALL," + (100 * effectLvs[1]) + ";"
	+ "bonus2 bIgnoreDefClassRate,CLASS_ALL," + (1 * effectLvs[2]) + ";"
	+ "bonus2 bIgnoreMdefClassRate,CLASS_ALL," + (1 * effectLvs[3]) + ";"
	+ "bonus bNoWeaponDamage," + (1 * effectLvs[4]) + ";"
	+ "bonus bNoMagicDamage," + (1 * effectLvs[5]) + ";"
	+ "bonus bFixedCastrate,-" + (1 * effectLvs[6]) + ";"
	+ "bonus bDelayrate,-" + (1 * effectLvs[7]) + ";"
	+ "bonus bSpeedAddRate," + (1 * effectLvs[8]) + ";"
	+ "bonus bMaxHP," + (50 * BaseLevel) + ";"
	+ "bonus bMaxHP," + (.@baseMaxHp * .@maxHpLv) + ";"
	+ "bonus bReduceDamageReturn," + (1 * effectLvs[10]) + ";"
	+ "bonus2 bResEff,eff," + (1 * effectLvs[11]) + ";"
	+ "bonus2 bIgnoreResRaceRate,RC_ALL," + (1 * effectLvs[12]) + ";"
	+ "bonus2 bIgnoreMResRaceRate,RC_ALL," + (1 * effectLvs[13]) + ";"
	+ "bonus2 bRegenPercentHP," + (.@regenRate ? 1 : 0) + "," + (11000 - cap_value(100 * .@regenRate,0,10000)) + ";"
	,86400,8,1;
	
	bonus_script
	"bonus bAtk," + (10 * effectLvs[15]) + ";"
	+ "bonus bMatk," + (10 * effectLvs[16]) + ";"
	+ "bonus bMaxSP,10000;"
	+ "bonus bAspd,300;"
	,86400,8,1;
	
	percentheal 100,100;
	return;
}

function	script	MapCleanUp	{
	if(getusers(0) <= 1 && !IsSkipTickMap()){
		killmonsterall strcharinfo(3),0;

		$playingMaps[lastPlayMap] = 0;
		$isSpawnMaps[lastPlayMap] = 0;
		$isBossMaps[lastPlayMap] = 0;
		$gidBossMaps[lastPlayMap] = 0;
	}
	return;
}

function	script	DeadPenalty	{
	freeloop(1);
	
	.@previousLv = bodyLv;
	.@minus = $bodyMax[callfunc("GetBodyTier") - 1];
	if(.@minus)
	.@minus /= 10;
	if(.@minus <= 1)
	.@minus = 2;
	.@randMinus = rand(.@minus);
	bodyLv = cap_value(bodyLv - .@randMinus,0,INT_MAX);
	dispbottom "(โทษการหมดสติ) Max Status ที่จะสุ่มได้มากสุด ลดลง " + F_InsertComma(.@randMinus) + " จาก " + F_InsertComma(.@previousLv) + " เป็น " + F_InsertComma(bodyLv);
	
	.@previousLv = traitLv;
	.@minus = $traitMax[callfunc("GetTraitTier") - 1];
	if(.@minus)
	.@minus /= 10;
	if(.@minus <= 1)
	.@minus = 2;
	.@randMinus = rand(.@minus);
	traitLv = cap_value(traitLv - .@randMinus,0,INT_MAX);
	dispbottom "(โทษการหมดสติ) Max Trait ที่จะสุ่มได้มากสุด ลดลง " + F_InsertComma(.@randMinus) + " จาก " + F_InsertComma(.@previousLv) + " เป็น " + F_InsertComma(traitLv);
	
	.@previousLv = skillLv;
	.@minus = $skillMax[callfunc("GetSkillTier") - 1];
	if(.@minus)
	.@minus /= 10;
	if(.@minus <= 1)
	.@minus = 2;
	.@randMinus = rand(.@minus);
	skillLv = cap_value(skillLv - .@randMinus,0,INT_MAX);
	dispbottom "(โทษการหมดสติ) Skill Level ลดลง " + F_InsertComma(.@randMinus) + " จาก " + F_InsertComma(.@previousLv) + " เป็น " + F_InsertComma(skillLv);
	
	.@previousLv = effectLv;
	.@minus = $effectMax[callfunc("GetEffectTier") - 1];
	if(.@minus)
	.@minus /= 10;
	if(.@minus <= 1)
	.@minus = 2;
	.@randMinus = rand(.@minus);
	effectLv = cap_value(effectLv - .@randMinus,0,INT_MAX);
	dispbottom "(โทษการหมดสติ) Max Effect ที่จะสุ่มได้มากสุด ลดลง " + F_InsertComma(.@randMinus) + " จาก " + F_InsertComma(.@previousLv) + " เป็น " + F_InsertComma(effectLv);
	
	// Clean all status
	statusup2 bStr,-5000;
	statusup2 bAgi,-5000;
	statusup2 bVit,-5000;
	statusup2 bInt,-5000;
	statusup2 bDex,-5000;
	statusup2 bLuk,-5000;
	
	// Clean all trait
	traitstatusup2 bPow,-500;
	traitstatusup2 bSta,-500;
	traitstatusup2 bWis,-500;
	traitstatusup2 bSpl,-500;
	traitstatusup2 bCon,-500;
	traitstatusup2 bCrt,-500;
	
	// Clean all skill
	.@maxSkillAmount = 55;
	for(.@m = 0; .@m < .@maxSkillAmount; .@m++){
		if(skillSlots[.@m] != 99999)
		skill $offensiveSkillIds[skillSlots[.@m]],0,3;
	}
	
	// Clean all effect
	.@maxEffectAmount = 17;
	for(.@m = 0; .@m < .@maxEffectAmount; .@m++)
	effectLvs[.@m] = 0;
	
	// Clean PORTAL OF CASTER delay
	pocDelay = 0;
	
	freeloop(0);
	
	return;
}

function	script	GetBodyExpReq	{
	for(.@req = 0; .@req < 10; .@req++){
		if($bodyMax[.@req] > bodyLv) 
		return ($bodyExpReq[.@req] * max(1,bodyLv));
	}
	return;
}

function	script	GetTraitExpReq	{
	for(.@req = 0; .@req < 10; .@req++){
		if($traitMax[.@req] > traitLv) 
		return ($traitExpReq[.@req] * max(1,traitLv));
	}
	return;
}

function	script	GetSkillExpReq	{
	for(.@req = 0; .@req < 10; .@req++){
		if($skillMax[.@req] > skillLv) 
		return ($skillExpReq[.@req] * max(1,skillLv));
	}
	return;
}

function	script	GetEffectExpReq	{
	for(.@req = 0; .@req < 10; .@req++){
		if($effectMax[.@req] > effectLv) 
		return ($effectExpReq[.@req] * max(1,effectLv));
	}
	return;
}

function	script	GetBodyTier	{
	for(.@req = 0; .@req < 10; .@req++){
		if($bodyMax[.@req] > bodyLv) 
		return (.@req + 1);
	}
	return;
}

function	script	GetTraitTier	{
	for(.@req = 0; .@req < 10; .@req++){
		if($traitMax[.@req] > traitLv) 
		return (.@req + 1);
	}
	return;
}

function	script	GetSkillTier	{
	for(.@req = 0; .@req < 10; .@req++){
		if($skillMax[.@req] > skillLv) 
		return (.@req + 1);
	}
	return;
}

function	script	GetEffectTier	{
	for(.@req = 0; .@req < 10; .@req++){
		if($effectMax[.@req] > effectLv) 
		return (.@req + 1);
	}
	return;
}
