function	script	InputOutOfRange	{ return getarg(0,0) <= 0 || getarg(0,0) > getarg(1,0); }

function	script	IsWeekend	{ .@day = gettime(DT_DAYOFWEEK); return (((.@day == FRIDAY) && gettime(DT_HOUR) >= 18) || (.@day == SATURDAY) || (.@day == SUNDAY)); }

function	script	IsInventoryFull	{ return (!checkweight(1100,1)); }

function	script	ApplyTired	{
	atcommand "@fakename";
	if(tired)
	.@debuffHint$ = "ล้า " + tired + "%";
	if(bonusDebuff)
	.@debuffHint$ += ((.@debuffHint$ != "") ? " " : "") + "ของเสื่อม " + bonusDebuff + "%";
	if(.@debuffHint$ != "")
	atcommand "@fakename [" + .@debuffHint$ + "]" + strcharinfo(0);
	atcommand "@debuff " + tired + " " + bonusDebuff;
	return;
}

function	script	ResetTired	{
	tired = 0;
	tiredSpot = 0;
	ptt = 0;
	ApplyTired();
	return;
}

function	script	IsSkipTickMap	{
	.@value$ = getarg(0,strcharinfo(3));
	return (.@value$ == "bl_depth2");
}

function	script	StringBase10000	{
	.@value = getarg(0,0);
	if(.@value < 10)
	return ("0.0" + .@value);
	else if(.@value < 100)
	return ("0." + (.@value / 10));
	else if(.@value < 1000)
	return insertchar((.@value / 10),".",1);
	else
	return (.@value /= 100);
}

function	script	KM	{
	.@value = getarg(0,0);
	if(.@value < 1000)
	return .@value;
	else if(.@value < 1000000)
	return (.@value /= 1000) + "k";
	else if(.@value >= 1000000)
	return (.@value /= 1000000) + "m";
}

function	script	Cap	{ return cap_value(getarg(0,0) + getarg(1,0),0,INT_MAX); }

function	script	IsZenyExceed	{
	.@isZenyExceed = (Cap(Zeny,getarg(0,0)) > 2000000000);
	if(.@isZenyExceed)
	message strcharinfo(0),"เกิดข้อผิดพลาด: Zeny เต็มแล้ว";
	return .@isZenyExceed;
}

function	script	ChangeZeny	{
	.@value = getarg(0,0);
	.@isEffect = getarg(1,1);
	.@isIncrease = (.@value >= 0);
	Zeny = Cap(Zeny,.@value);
	message strcharinfo(0),(.@isIncrease ? "+" : "-") + F_InsertComma(.@value) + "z เป็น " + F_InsertComma(Zeny) + "z";
	if(.@isEffect)
	specialeffect2 18;
	return;
}

function	script	Storage	{
	.@menu$ = "คลังเก็บของปกติ:คลังเก็บของ Guild:";
	.@selectedStorage = select(.@menu$);
	if(.@selectedStorage == 1)
	openstorage;
	else if(.@selectedStorage == 2)
	guildopenstorage();
	return;
}

function	script	CCCDrop	{
	.@tier = getarg(0,0);
	.@isBoss = getarg(1,0);
	// Error
	if(.@tier <= 0)
	return;
	// Body Points (Base 10%)
	.@rand = rand(100);
	.@rate = (10 * (bonusDropMultiplier * (.@isBoss ? 2 : 1)));
	if(.@rand < .@rate){
		.@reward = (.@isBoss ? 5 : 1);
		bodyPoints[.@tier] = cap_value(bodyPoints[.@tier] + .@reward,0,INT_MAX);
		dispbottom "+" + .@reward + " แต้ม Body Tier " + .@tier + " (รวม " + F_InsertComma(bodyPoints[.@tier]) + ")",0xfafa80;
	}
	else if(#isVerboseLog)
	dispbottom "(แต้ม Body) ต้องสุ่มได้ < " + .@rate + " คุณสุ่มได้ " + .@rand,0xfa8080;
	// Trait Points (Base 5%)
	.@rand = rand(100);
	.@rate = (5 * (bonusDropMultiplier * (.@isBoss ? 2 : 1)));
	if(.@rand < .@rate){
		.@reward = (.@isBoss ? 3 : 1);
		traitPoints[.@tier] = cap_value(traitPoints[.@tier] + .@reward,0,INT_MAX);
		dispbottom "+" + .@reward + " แต้ม Trait Tier " + .@tier + " (รวม " + F_InsertComma(traitPoints[.@tier]) + ")",0xfafa80;
	}
	else if(#isVerboseLog)
	dispbottom "(แต้ม Trait) ต้องสุ่มได้ < " + .@rate + " คุณสุ่มได้ " + .@rand,0xfa8080;
	// Skill Points (Base 3%)
	.@rand = rand(100);
	.@rate = (3 * (bonusDropMultiplier * (.@isBoss ? 2 : 1)));
	if(.@rand < .@rate){
		.@reward = (.@isBoss ? 2 : 1);
		skillPoints[.@tier] = cap_value(skillPoints[.@tier] + .@reward,0,INT_MAX);
		dispbottom "+" + .@reward + " แต้ม Skill Tier " + .@tier + " (รวม " + F_InsertComma(skillPoints[.@tier]) + ")",0xfafa80;
	}
	else if(#isVerboseLog)
	dispbottom "(แต้ม Skill) ต้องสุ่มได้ < " + .@rate + " คุณสุ่มได้ " + .@rand,0xfa8080;
	return;
}

function	script	ReturnOrb	{
	specialeffect2 35;
	if(!IsSkipTickMap())
	progressbar "",2;
	callfunc("MapCleanUp");
	warp "Save",0,0;
	return;
}

function	script	TeleportOrb	{
	specialeffect2 780;
	if(!IsSkipTickMap())
	progressbar "",1;
	if(isBlast){
		warp "Random",0,0;
		getunitdata $gidBossBlastMaps[lastPlayMap],.@uds;
		viewpoint 1,.@uds[UMOB_X],.@uds[UMOB_Y],1,0xff0000;
	}
	else if(!IsSkipTickMap() && $isBossMaps[lastPlayMap]){
		menu "ลงหัว Boss",-;
		getunitdata $gidBossMaps[lastPlayMap],.@uds;
		// Get available cell to warp to boss
		getfreecell strcharinfo(3),.@rX,.@rY,.@uds[UMOB_X],.@uds[UMOB_Y],rand(5),rand(5);
		warp strcharinfo(3),.@rX,.@rY;
		viewpoint 1,.@uds[UMOB_X],.@uds[UMOB_Y],1,0xff0000;
	}
	else
	warp "Random",0,0;
	return;
}

function	script	ApplyCCCRules	{
	// Player can't attack
	setpcblock PCBLOCK_ATTACK,true;
	
	// Not allowed to had normal game points
	StatusPoint = 0;
	TraitPoint = 0;
	SkillPoint = 0;
	
	if(JobLevel < 100)
	JobLevel = 100;
	
	return;
}

function	script	RemovePlayDelegates	{
	deltimer "เล่นโหมด BLAST::OnSpawnMonsterHint";
	deltimer "เล่นเกม::OnSpawnMonsterHint";
	deltimer "เล่นเกม::OnSpawnMonster";
	
	return;
}

function	script	ApplyEffect	{
	bonus_script_clear 8;
	.@maxHpLv = (effectLvs[9] + blastEffectLvs[9]);
	.@baseMaxHp =
	(.@maxHpLv < 10) ? 1000
	: (.@maxHpLv < 20) ? 2500
	: (.@maxHpLv < 30) ? 4000
	: (.@maxHpLv < 40) ? 5500
	: (.@maxHpLv < 50) ? 7500
	: (.@maxHpLv < 60) ? 9500
	: (.@maxHpLv < 70) ? 11500
	: (.@maxHpLv < 80) ? 14000
	: (.@maxHpLv < 90) ? 16500
	: 20000;
	bonus_script
	"bonus2 bAddClass,CLASS_ALL," + (100 * (effectLvs[0] + blastEffectLvs[0])) + ";"
	+ "bonus2 bMagicAddClass,CLASS_ALL," + (100 * (effectLvs[1] + blastEffectLvs[1])) + ";"
	+ "bonus2 bIgnoreDefClassRate,CLASS_ALL," + (1 * (effectLvs[2] + blastEffectLvs[2])) + ";"
	+ "bonus2 bIgnoreMdefClassRate,CLASS_ALL," + (1 * (effectLvs[3] + blastEffectLvs[3])) + ";"
	+ "bonus bNoWeaponDamage," + (1 * (effectLvs[4] + blastEffectLvs[4])) + ";"
	+ "bonus bNoMagicDamage," + (1 * (effectLvs[5] + blastEffectLvs[5])) + ";"
	+ "bonus bFixedCastrate,-" + (1 * (effectLvs[6] + blastEffectLvs[6])) + ";"
	+ "bonus bDelayrate,-" + (1 * (effectLvs[7] + blastEffectLvs[7])) + ";"
	+ "bonus bSpeedAddRate," + (1 * (effectLvs[8] + blastEffectLvs[8])) + ";"
	+ "bonus bMaxHP," + (.@baseMaxHp * .@maxHpLv) + ";"
	+ "bonus bReduceDamageReturn," + (1 * (effectLvs[10] + blastEffectLvs[10])) + ";"
	+ "bonus2 bResEff,eff," + (1 * (effectLvs[11] + blastEffectLvs[11])) + ";"
	+ "bonus bMaxSP,10000;"
	+ "bonus bAspd,300;"
	,86400,8,1;
	
	.@isTest = 0;
	
	if(.@isTest){
		bonus_script_clear 8;
		bonus_script
		"bonus2 bAddClass,CLASS_ALL,10000;"
		+ "bonus2 bMagicAddClass,CLASS_ALL,10000;"
		+ "bonus2 bIgnoreDefClassRate,CLASS_ALL,100;"
		+ "bonus2 bIgnoreMdefClassRate,CLASS_ALL,100;"
		+ "bonus bNoWeaponDamage,100;"
		+ "bonus bNoMagicDamage,100;"
		+ "bonus bFixedCastrate,-100;"
		+ "bonus bDelayrate,-100;"
		+ "bonus bSpeedAddRate,100;"
		+ "bonus bMaxHP,2000000;"
		+ "bonus bReduceDamageReturn,100;"
		+ "bonus bAspd,300;"
		,86400,8,1;
	}
	
	percentheal 100,100;
	return;
}

function	script	MapCleanUp	{
	if(getusers(0) <= 1 && !IsSkipTickMap()){
		killmonsterall strcharinfo(3),0;

		if(isBlast){
			$blastPlayingMaps[lastPlayMap] = 0;
			$isBlastSpawnMaps[lastPlayMap] = 0;
			$gidBossBlastMaps[lastPlayMap] = 0;
		}
		else{
			$playingMaps[lastPlayMap] = 0;
			$isSpawnMaps[lastPlayMap] = 0;
			$isBossMaps[lastPlayMap] = 0;
			$gidBossMaps[lastPlayMap] = 0;
		}
	}
	return;
}

function	script	DeadPenalty	{
	.@status = (50 * getarg(0,1));
	.@trait = (25 * getarg(1,1));
	.@skill = (1 * getarg(2,1));
	// Status Penalty
	statusup2 bStr,-.@status;
	statusup2 bAgi,-.@status;
	statusup2 bVit,-.@status;
	statusup2 bInt,-.@status;
	statusup2 bDex,-.@status;
	statusup2 bLuk,-.@status;
	// Trait Penalty
	traitstatusup2 bPow,-.@trait;
	traitstatusup2 bSta,-.@trait;
	traitstatusup2 bWis,-.@trait;
	traitstatusup2 bSpl,-.@trait;
	traitstatusup2 bCon,-.@trait;
	traitstatusup2 bCrt,-.@trait;
	// Skill Penalty
	freeloop(1);
	for(.@s = 0; .@s < .@skill; .@s++){
		.@learnSkillCount = 0;
		for(.@i = 0; .@i < 9; .@i++){
			if(skillSlots[.@i] != 99999)
			.@learnSkillCount++;
		}
		if(.@learnSkillCount > 1){
			.@isDoneRemoveSkill = 0;
			while(!.@isDoneRemoveSkill){
				.@randomLostSkillSlot = rand(9);
				if(skillSlots[.@randomLostSkillSlot] != 99999){
					skill $offensiveSkillIds[skillSlots[.@randomLostSkillSlot]],0,3;
					skillSlots[.@randomLostSkillSlot] = 99999;
					.@isDoneRemoveSkill = 1;
				}
			}
		}
	}
	freeloop(0);
	return;
}

